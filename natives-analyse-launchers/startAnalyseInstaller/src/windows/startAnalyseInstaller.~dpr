program startAnalyseInstaller;

uses
  Forms,
  UStartAnalyseInstaller in 'UStartAnalyseInstaller.pas' {StartAnalyseInstallerForm},
  ShellAPI,
  windows,
  SysUtils,
  Classes,
  StrUtils,
  Dialogs,
  UnitRedirect in 'UnitRedirect.pas';

{$R *.res}

function TestJavaFile:boolean;
var cmd, input, output, error : String;
begin
  cmd := 'Cmd.exe';
  input := 'java -version'+#13#10+'exit'+#13#10;
  Sto_RedirectedExecute(cmd, output, error, input);
  Result := AnsiContainsStr(error, 'java version') ;
end;

const START_ANALYSE = 1;

var parameters : string;
    SEInfo: TShellExecuteInfo;
    value : LongBool;
begin
  if(TestJavaFile = true) then
  begin
    parameters := '/C java -jar "' + GetCurrentDir + '\windows-analyse-installer.jar"';
    FillChar(SEInfo, SizeOf(SEInfo), 0) ;
    SEInfo.cbSize := SizeOf(TShellExecuteInfo) ;
    with SEInfo do
    begin
      fMask := SEE_MASK_NOCLOSEPROCESS;
      Wnd := Application.Handle;
      lpFile := PChar('cmd.exe') ;
      lpParameters := PChar(parameters) ;
      lpDirectory := PChar(GetCurrentDir) ;
      nShow := SW_HIDE;
    end;
    value := ShellExecuteEx(@SEInfo)
    UStartAnalyseInstaller.errorNum := GetLastError();
    if (value = true) then Application.Terminate;
  end else
  begin
    Application.Initialize;
    Application.Title := 'Windows Analyse Installer Launcher';
    Application.CreateForm(TStartAnalyseInstallerForm, StartAnalyseInstallerForm);
    Application.Run;
  end;
end.
